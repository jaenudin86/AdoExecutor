<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{725A14E1-133B-4F0E-B037-D64CA0D53CE6}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>AdoExecutor.UnitTest</RootNamespace>
    <AssemblyName>AdoExecutor.UnitTest</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="FakeItEasy">
      <HintPath>..\packages\FakeItEasy.1.25.2\lib\net40\FakeItEasy.dll</HintPath>
    </Reference>
    <Reference Include="nunit.framework">
      <HintPath>..\packages\NUnit.2.6.4\lib\nunit.framework.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Core\Configuration\ConfigurationTests.cs" />
    <Compile Include="Core\ConnectionString\AppConfigConnectionStringProviderTest.cs" />
    <Compile Include="Core\ConnectionString\ConstantConnectionStringProviderTests.cs" />
    <Compile Include="Core\Context\Infrastructure\AdoExecutorContextTests.cs" />
    <Compile Include="Core\DataObjectFactory\SqlDataObjectFactoryTests.cs" />
    <Compile Include="Core\DataObjectFactory\OleDbDataObjectFactory.cs" />
    <Compile Include="Core\DataObjectFactory\OdbcDataObjectFactoryTests.cs" />
    <Compile Include="Core\Exception\Infrastructure\AdoExecutorExceptionTests.cs" />
    <Compile Include="Core\Interception\ConsoleLoggerInterceptorTests.cs" />
    <Compile Include="Core\Interception\Infrastructure\InterceptorErrorContextTests.cs" />
    <Compile Include="Core\Interception\Infrastructure\InterceptorExitContextTests.cs" />
    <Compile Include="Core\Interception\Infrastructure\InterceptorSuccessContextTests.cs" />
    <Compile Include="Core\Interception\LoggerInterceptorBaseTests.cs" />
    <Compile Include="Core\ObjectBuilder\DataSetObjectBuilderTests.cs" />
    <Compile Include="Core\ObjectBuilder\DataTableObjectBuilderTests.cs" />
    <Compile Include="Core\ObjectBuilder\DynamicObjectBuilderTests.cs" />
    <Compile Include="Core\ObjectBuilder\Infrastructure\ObjectBuilderContextTests.cs" />
    <Compile Include="Core\ObjectBuilder\ObjectBuilderTestsBase.cs" />
    <Compile Include="Core\ObjectBuilder\SimpleTypeObjectBuilderTests.cs" />
    <Compile Include="Core\ParameterExtractor\DataTableParameterExtractorTests.cs" />
    <Compile Include="Core\ParameterExtractor\DictionaryParameterExtractorTests.cs" />
    <Compile Include="Core\ParameterExtractor\EnumerableParameterExtractorTests.cs" />
    <Compile Include="Core\ParameterExtractor\ObjectPropertyParameterExtractorTests.cs" />
    <Compile Include="Core\ParameterExtractor\ParameterExtractorTestsBase.cs" />
    <Compile Include="Core\ParameterExtractor\SpecifiedParameterParameterExtractorTests.cs" />
    <Compile Include="Core\Parameter\SpecifiedParameterTests.cs" />
    <Compile Include="Core\QueryFactory\QueryFactoryTests.cs" />
    <Compile Include="Core\Query\Infrastructure\QueryOptionsTests.cs" />
    <Compile Include="Utilities\Adapter\DataTable\DataTableAdapterTests.cs" />
    <Compile Include="Utilities\Adapter\List\AbstractGenericListAdapterTests.cs" />
    <Compile Include="Utilities\Adapter\List\ArrayListAdapterTests.cs" />
    <Compile Include="Utilities\Adapter\List\GenericListAdapterTests.cs" />
    <Compile Include="Utilities\Adapter\List\ListAdapterFactoryTests.cs" />
    <Compile Include="Utilities\Adapter\List\ReadOnlyCollectionListAdapterTests.cs" />
    <Compile Include="Utilities\Adapter\List\ReadOnlyObservableCollectionListAdapterTests.cs" />
    <Compile Include="Utilities\ObjectConverter\ObjectConverterTests.cs" />
    <Compile Include="Utilities\PrimitiveTypes\SqlPrimitiveDataTypesTests.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup />
  <ItemGroup>
    <None Include="App.config">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Include="packages.config" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('$(SolutionDir)\.nuget\NuGet.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\.nuget\NuGet.targets'))" />
  </Target>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>